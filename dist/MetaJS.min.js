!function(a,b,c,d){if("function"==typeof define&&define.amd)define(b,c,d);else if("object"==typeof exports&&exports){for(var e=0,f=c.length;f>e;++e){var g=c[e];"string"==typeof g&&(g=g.replace(/([A-Z]+)/g,function(a){return"-"+a.toLowerCase()}).replace(/^-/,""),c[e]=require(g))}exports=d.apply(a,c)}else{for(var e=0,f=c.length;f>e;++e){var g=c[e];if("string"==typeof g){if(!(g in a))throw new Error('"'+b+'" dependent on non exited module "'+g+'"!');c[e]=a[g]}}a[b]=d.apply(a,c)}}(new Function("return this")(),"MetaJS",[],function(a){var b=function(a){this.manager=a};b.prototype={processor:function(a,b,c){return"undefined"==typeof b?this.manager.getProcessor(a):(this.manager.setProcessor(a,b,c),void 0)}};var c=function(){this._processors={}};c.prototype={getProcessor:function(a){return this.checkProcessor(a),this._processors[a]},hasProcessor:function(a){return a in this._processors},setProcessor:function(a,b,c){return"undefined"==typeof c&&(c=b,b=null),"string"==typeof b&&(b=this.getProcessor(b)),"function"==typeof c&&(c={process:c}),c=new d(a,b,c),this._processors[c.getName()]=c,this},removeProcessor:function(a){this.checkProcessor(a);var b=this._processors[a];return delete this._processors[a],b},getProcessors:function(){return this._processors},setProcessors:function(a){for(var b in a)this.setProcessor(b,a[b]);return this},checkProcessor:function(a){if(!this.hasProcessor(a))throw new Error('Meta processor "'+a+'" does not exists!')}};var d=function(a,b,c){if("function"==typeof b&&(b={process:b}),"undefined"==typeof c&&(c=b,b=null),b)for(var d in b)this[d]=this.__copy(b[d]);for(var d in c)this[d]=this.__copy(c[d]);this._name=a};d.prototype={getName:function(){return this._name},process:function(){throw new Error("Process method must be overwritten in subprocessors!")},__copy:function(a){var b,c=Object.prototype.toString.apply(a);if("object"!=typeof a)b=a;else if("[object Date]"===c)b=new Date(a.getTime());else if("[object Array]"===c){b=[];for(var d=0,e=a.length;e>d;++d)b[d]=this.__copy(a[d])}else if("[object RegExp]"===c)b=new RegExp(a.source);else{b={};for(var f in a)b[f]=this.__copy(a[f])}return b}};var e=new c,f=new b(e);return{Manager:c,Processor:d,Meta:b,meta:f}});
//# sourceMappingURL=dist/MetaJS.min.map